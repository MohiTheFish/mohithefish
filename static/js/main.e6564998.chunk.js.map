{"version":3,"sources":["components/Loading/loading.jsx","pages/testing.jsx","pages/MainPage/mainPage.jsx","pages/Games/games.jsx","pages/Games/Spyfall/spyfall.jsx","components/NavBar/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Loading","className","MainPage","useState","count","setCount","email","setEmail","number","setNumber","imageName","setImageName","useEffect","a","fetch","method","headers","then","res","json","image","response","console","log","document","title","fetchData","onClick","type","value","onChange","e","target","src","alt","to","allGames","Games","name","setName","redirectPage","setRedirectPage","validateName","isInvalid","msg","Boolean","push","pathname","state","username","TextField","error","required","id","label","variant","helperText","map","val","Button","key","color","disabled","locations","names","Spyfall","props","location","localStorage","setItem","myName","getItem","selectedLocations","Set","selectedNames","isSpy","select","bind","deselect","selectName","deselectName","renderNames","renderLocations","socket","io","reconnection","on","data","this","add","innerHTML","setState","delete","textContent","isSelected","has","callback","selectClass","React","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","createMuiTheme","palette","primary","blue","secondary","green","status","danger","ComebackGame","params","match","style","textTransform","App","ThemeProvider","basename","exact","path","component","Testing","NavBar","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e6564998.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './loading.scss';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"lds-ripple\">\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Loading from 'components/Loading/loading';\r\n\r\nexport default function MainPage() {\r\n  const [count, setCount] = useState(0);\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [number, setNumber] = useState(1);\r\n\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  useEffect( () => {\r\n    document.title = \"MohiTheFish\"\r\n    async function fetchData() {\r\n        \r\n      const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://randomfox.ca/floof/?ref=apilist.fun\", \r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }).then(res => res.json())\r\n      .then(res => {\r\n        setImageName(res.image);\r\n      });\r\n      console.log(response);\r\n      \r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    setEmail(e.target.value);\r\n  }\r\n  return (\r\n    <div>\r\n      This page is being used to test new features.\r\n      <div>\r\n        <p>You clicked {count} times</p>\r\n        <button onClick={() => setCount(count+1)}>\r\n          Click me\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input type='text' value={email} onChange={handleChange} />\r\n      </div>\r\n      <div>\r\n        <h1>Pick a movie</h1>\r\n        <select value={number} onChange={e => setNumber(e.target.value)}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n          <option value=\"5\">5</option>\r\n          <option value=\"6\">6</option>\r\n        </select>\r\n      </div>\r\n\r\n      { imageName === '' ? <Loading /> : <img src={imageName} alt=\"A fox\" />}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './mainPage.scss';\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <div className=\"main-page-wrapper\">\r\n      <div className=\"intro\">\r\n        <h1>Muhammed Imran</h1>\r\n        <h2>MohiTheFish</h2>\r\n\r\n        <Link to=\"/games\">Click me to see some games.</Link> \r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './games.scss';\r\n\r\nconst allGames = [\r\n  'spyfall',\r\n  'tictactoe',\r\n  'war',\r\n  'gare',\r\n  'idk fam'\r\n];\r\n\r\n\r\nfunction validateName(name) {\r\n  if (!name) {\r\n    return [true, 'Name cannot be empty.'];\r\n  }\r\n  return [false, \"\"];\r\n}\r\n\r\n\r\nexport default function Games() {\r\n  const [name, setName] = useState(\"\");\r\n  const [redirectPage, setRedirectPage] = useState(\"\");\r\n\r\n  useEffect ( () => {\r\n    document.title = \"Games\";\r\n  }, []);\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n  \r\n  const [isInvalid, msg] = validateName(name);\r\n  if (Boolean(redirectPage) && !isInvalid) {\r\n   return (\r\n     <Redirect push to={{\r\n        pathname: `/games/${redirectPage}`,\r\n        state: {username: name}\r\n      }}\r\n      />\r\n   );\r\n  }\r\n  return (\r\n    <div className=\"games-page-wrapper\">\r\n      <h1 className=\"header\">Games</h1>\r\n      <h3 className=\"input-message\">Please create your username before continuing.</h3>\r\n      <div className=\"input\">\r\n        <TextField\r\n          error={isInvalid}\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          variant=\"filled\"\r\n          onChange={handleChange}\r\n          helperText={msg}\r\n        />\r\n      </div>\r\n\r\n\r\n      <div className=\"buttons-wrapper\">\r\n        {\r\n          allGames.map(val =>\r\n            <Button \r\n              key={val}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isInvalid}\r\n              onClick={() => setRedirectPage(val)}\r\n            >\r\n              {val}\r\n            </Button>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport io from 'socket.io-client';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './spyfall.scss';\r\n\r\nconst locations = [\r\n  'Desert',\r\n  'Swamp',\r\n  'Forest',\r\n  'City',\r\n  'Boat',\r\n  'Crusader Army',\r\n  'World War II Squad',\r\n  'Polar Station',\r\n  'Space Station'\r\n];\r\n\r\nconst names = [\r\n  \"Abefsefsefsfesef;isoefjsoiefsjfoec\", \r\n  \"BCD\",\r\n  \"CDFE\",\r\n  \"EFE\",\r\n  \"loejofjeeojfoso\"\r\n];\r\n\r\nfunction renderLocations(selectedLocations) {\r\n  return locations.map(value => {\r\n    const isSelected = selectedLocations.has(value);\r\n    let callback = this.select;\r\n    let selectClass = \"unselected\";\r\n    if (isSelected) {\r\n      callback = this.deselect;\r\n      selectClass = \"selected\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={value} \r\n        className={`location vertically-center-text ${selectClass}`}\r\n        onClick={callback}\r\n      > \r\n        <p>{value}</p>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default class Spyfall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    /* Best way to keep track of the name after refreshing??? */\r\n    if(props.location.state) {\r\n      localStorage.setItem('username', props.location.state.username)\r\n    }\r\n    this.myName = localStorage.getItem('username');\r\n\r\n    this.state = {\r\n      selectedLocations: new Set(),\r\n      selectedNames: new Set(),\r\n      isSpy: true,\r\n    }\r\n\r\n    /** Event Handlers */\r\n    this.select = this.select.bind(this);\r\n    this.deselect = this.deselect.bind(this);\r\n\r\n    this.selectName = this.selectName.bind(this);\r\n    this.deselectName = this.deselectName.bind(this);\r\n\r\n    /** Render functions */\r\n    this.renderNames = this.renderNames.bind(this);\r\n    this.renderLocations = this.renderLocations.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   document.title = \"Spyfall\";\r\n  // }\r\n\r\n  componentDidMount() {\r\n    document.title = \"Spyfall\";\r\n    const socket = io('http://localhost:5000', {\r\n      reconnection: false,\r\n    });\r\n\r\n    socket.on('connect', function(){\r\n      console.log('THe client connected');\r\n    });\r\n\r\n    socket.on('my response', function(data){\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  selectName(e) {\r\n    const { selectedNames } = this.state;\r\n    selectedNames.add(e.target.innerHTML);\r\n    this.setState({\r\n      selectedNames,\r\n    });\r\n  }\r\n\r\n  deselectName(e) {\r\n    const { selectedNames } = this.state;\r\n    selectedNames.delete(e.target.innerHTML);\r\n    this.setState({\r\n      selectedNames,\r\n    });\r\n  }\r\n\r\n  select(e) {\r\n    const { selectedLocations } = this.state;\r\n    selectedLocations.add(e.target.textContent);\r\n    \r\n    this.setState({\r\n      selectedLocations\r\n    });\r\n  }\r\n\r\n  deselect(e) {\r\n    const { selectedLocations } = this.state;\r\n    selectedLocations.delete(e.target.textContent);\r\n\r\n    this.setState({\r\n      selectedLocations\r\n    });\r\n  }\r\n\r\n\r\n  renderNames() {\r\n    const { selectedNames } = this.state;\r\n    return names.map(name => {\r\n      const isSelected = selectedNames.has(name);\r\n      let callback = this.selectName;\r\n      let selectClass = \"\";\r\n      if (isSelected) {\r\n        callback = this.deselectName;\r\n        selectClass = \"selected\";\r\n      }\r\n      \r\n      return (\r\n        <h4 key={name}\r\n         className={selectClass}\r\n         onClick={callback}>\r\n          {name}\r\n        </h4>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderLocations() {\r\n    const { selectedLocations } = this.state; \r\n    return locations.map(value => {\r\n      const isSelected = selectedLocations.has(value);\r\n      let callback = this.select;\r\n      let selectClass = \"\";\r\n      if (isSelected) {\r\n        callback = this.deselect;\r\n        selectClass = \"selected\";\r\n      }\r\n\r\n      return (\r\n        <div\r\n          key={value} \r\n          className={`location vertically-center-text ${selectClass}`}\r\n          onClick={callback}\r\n        > \r\n          <p>{value}</p>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"spyfall-page-wrapper\">\r\n        <div className=\"header-text\">\r\n          <h1>Play Spyfall</h1>\r\n          <h4>Your name is: {this.myName}</h4>\r\n          <h4>\r\n            {\r\n              this.state.isSpy \r\n              ? \"You ARE the spy! \" \r\n              : \"You are NOT the spy.\"\r\n            }\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"other-players\">\r\n          <h2 className=\"header\">Other Players</h2>\r\n          <div className=\"names\">\r\n            {\r\n              this.renderNames()\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"location-section\">\r\n          <h2 className=\"header\">Locations</h2>\r\n          <div className=\"location-wrapper\">\r\n            {\r\n              this.renderLocations()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Testing from 'pages/testing'\r\nimport MainPage from 'pages/MainPage/mainPage';\r\nimport Games from 'pages/Games/games';\r\nimport Spyfall from 'pages/Games/Spyfall/spyfall';\r\nimport NavBar from 'components/NavBar/navbar';\r\n\r\nimport './App.css';\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: green,\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n});\r\n\r\nfunction ComebackGame(props) {\r\n  const { match: {params}} = props;\r\n  console.log(props);\r\n  return <div>\r\n    <h1>\r\n      <span style={{textTransform: \"uppercase\"}}>{params.name}</span> is not yet built. Come back soon.\r\n      </h1>\r\n  </div>;\r\n}\r\n\r\nfunction App() {  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route path=\"/testing\" component={Testing} /> \r\n          <Route path=\"/testcomponent\" component={NavBar} />\r\n          <Route exact path=\"/games\" component={Games} />\r\n          <Route path=\"/games/spyfall\" component={Spyfall} />\r\n          <Route path=\"/games/:name\" component={ComebackGame} />\r\n\r\n          <Route>\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}